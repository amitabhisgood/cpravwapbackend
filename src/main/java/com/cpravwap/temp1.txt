This is the code to parse CSV data and update records to mysql database. The 'date' is giving an issue. 
Is is actually converting the date to UTC before storing in the table. I want the data as it is in the CSV.
What to do?
~

    public void parseAndSaveCsv() {
        System.out.println("Parsing CSV..1");
        try (CSVReader reader = new CSVReader(new FileReader(CSV_FILE_PATH))) {
            String[] nextLine;
            boolean isHeader = true;

            System.out.println("Parsing CSV..2");
            String dateString = "";
            while ((nextLine = reader.readNext()) != null) {
                // Skip header row
                if (isHeader) {
                    isHeader = false;
                    continue;
                }

                // If nextLine contains only 1 element and includes ';', split it into array
                if (nextLine.length == 1 && (nextLine[0].contains(",") || nextLine[0].contains(";"))) {
                    nextLine = nextLine[0].split(";");
                }

                if (nextLine.length != 15) {  // Assuming 15 columns are expected
                    System.err.println("Invalid row length: " + String.join(",", nextLine));
                    continue;
                }

                D270924java record = new D270924java();

                try {
                    // Strip the (India Standard Time) part
                    dateString = nextLine[0];

                    // Parse date using ZonedDateTime and the updated formatter
                    System.out.println("dateString: " + dateString);
                    DateTimeFormatter dtfInput = new DateTimeFormatterBuilder()
                                        .parseCaseInsensitive()
                                        .appendPattern("E MMM d uuuu H:m:s")
                                        .appendLiteral(" ")
                                        .appendZoneId()
                                        .appendPattern("X")
                                        .appendLiteral(" ")
                                        .appendLiteral("(")
                                        .appendGenericZoneText(TextStyle.FULL)
                                        .appendLiteral(')')
                                        .toFormatter(Locale.ENGLISH);
                    DateFormat inputFormat = new SimpleDateFormat(
                                    "E MMM dd yyyy HH:mm:ss 'GMT'z", Locale.ENGLISH);
                    Date date = inputFormat.parse(dateString);
                    record.setDate(date);

                    // Parse other fields
                    record.setOpen(parseDouble(nextLine[1]));
                    record.setHigh(parseDouble(nextLine[2]));
                    record.setLow(parseDouble(nextLine[3]));
                    record.setClose(parseDouble(nextLine[4]));
                    record.setPivot(parseDouble(nextLine[5]));
                    record.setResistance1(parseDouble(nextLine[6]));
                    record.setSupport1(parseDouble(nextLine[7]));
                    record.setResistance2(parseDouble(nextLine[8]));
                    record.setSupport2(parseDouble(nextLine[9]));
                    record.setResistance3(parseDouble(nextLine[10]));
                    record.setSupport3(parseDouble(nextLine[11]));
                    record.setCprPivot(parseDouble(nextLine[12]));
                    record.setCprBc(parseDouble(nextLine[13]));
                    record.setCprTc(parseDouble(nextLine[14]));
                    System.out.println(record);

                    // Save the record to the database
                    repository.save(record);
                } catch (Exception e) {
                    System.err.println("Error parsing row: " + dateString);
                    e.printStackTrace();
                    break;
                }
            }
            System.out.println("Parsing CSV..complete");

            System.out.println("CSV data has been successfully imported into the database.");

        } catch (IOException | CsvValidationException e) {
            System.err.println("Error reading the CSV file.");
            e.printStackTrace();
        }
    }

~
data in CSV
~
Fri Sep 27 2024 09:15:00 GMT+0530 (India Standard Time);
~
data stored in table
~
2024-09-27 03:45:00
~
the column type is DATETIME.

    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Column(name = "date")
    private Date date;
~

